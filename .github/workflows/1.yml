name: 智能架构分析工作流

on:
  pull_request:


jobs:
  architecture-analysis:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: 🛠 检出PR分支代码
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 2
          submodules: recursive

      - name: 🐍 配置Python环境
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: 'pip'

      - name: 📦 安装系统依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            graphviz \
            imagemagick \
            libxml2-dev \
            libxslt-dev \
            openjdk-17-jdk \
            snapd

          # 安装PlantUML并配置环境
          sudo snap install plantuml
          echo "PATH=$PATH:/snap/bin" >> $GITHUB_ENV

          # 验证安装
          plantuml -version
          java -version

      - name: 🧩 安装Python包
        run: |
          pip install --upgrade pip
          pip install \
            pylint \
            pyreverse\
            matplotlib\
            qcloud-cos\
            pyyaml\
            pyan3

      - name: 🔍 动态变更检测
        id: changed-modules
        run: |
          git diff --name-only HEAD^ HEAD | grep -E 'MZAPI/MB/|src/' > changed_files.txt
          MODULE_PATHS=$(xargs dirname < changed_files.txt | sort -u | tr '\n' ' ')
          echo "modules=$MODULE_PATHS" >> $GITHUB_OUTPUT
          echo "检测到变更模块：$MODULE_PATHS"

      - name: 📊 生成架构图谱
        env:
          TARGET_MODULES: ${{ steps.changed-modules.outputs.modules }}
        run: |
          # 类图生成
          pyreverse -o png -ASmn -p FullSystem $TARGET_MODULES
          
          # 包依赖图
          pyreverse -k -o png -p Packages $TARGET_MODULES
          
          # 时序图生成
          find MB -name '*.py' | xargs pylint --generate-uml=sequence
          plantuml *.puml
          
          # 调用关系图
          pyan MB/**/*.py --uses --dot | dot -Tpng -o callgraph.png
          
          # 代码热度分析
          git log --since="30 days ago" --pretty=format: --name-only | grep '\.py$' | sort | uniq -c > hotspots.txt
          python -c "
          import matplotlib.pyplot as plt
          data = [line.strip().split(maxsplit=1) for line in open('hotspots.txt')][:10]
          plt.figure(figsize=(10,6))
          plt.barh([x[1] for x in data], [int(x[0]) for x in data])
          plt.title('代码变更热点分布')
          plt.savefig('hotspots.png', bbox_inches='tight)
          "

          mkdir -p arch_assets
          mv *.png *.puml arch_assets/

      - name: ☁️ 上传至腾讯云COS
        env:
          COS_SECRET_ID: ${{ secrets.COS_SECRET_ID }}
          COS_SECRET_KEY: ${{ secrets.COS_SECRET_KEY }}
          COS_BUCKET: ${{ secrets.COS_BUCKET }}
          COS_REGION: ${{ secrets.COS_REGION }}
        run: |
          pip install coscmd
          coscmd config -a "$COS_SECRET_ID" -s "$COS_SECRET_KEY" -b "$COS_BUCKET" -r "$COS_REGION"

          PR_NUM=${{ github.event.pull_request.number }}
          SHORT_SHA=${GITHUB_SHA:0:7}
          TIMESTAMP=$(date -u +"%Y%m%dT%H%M%S")
          COS_PATH="ernie-arch/pr-$PR_NUM/$SHORT_SHA-$TIMESTAMP"

          coscmd upload -r arch_assets/ "$COS_PATH" \
            --acl public-read \
            -H "Cache-Control: no-cache"

          echo "ARCH_BASE_URL=https://pr.mizhoubaobei.top/$COS_PATH" >> $GITHUB_ENV

      - name: 💬 生成PR分析报告
        uses: actions/github-script@v6
        env:
          DIAGRAM_BASE: ${{ env.ARCH_BASE_URL }}
        with:
          script: |
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            const newModules = [...new Set(
              files
                .filter(f => f.status === 'added' && f.filename.includes('MZAPI/MB/'))
                .map(f => f.filename.split('/')[3])
            )];

            const timestamp = Date.now();
            const commentBody = `
            ## 🏗 ERNIE 4.0-8K 架构分析报告

            ### 核心可视化
            <table>
              <tr>
                <td><img src="${process.env.DIAGRAM_BASE}/classes_FullSystem.png?ts=${timestamp}" width="400"></td>
                <td><img src="${process.env.DIAGRAM_BASE}/packages_Packages.png?ts=${timestamp}" width="400"></td>
              </tr>
              <tr>
                <td>类继承关系</td>
                <td>包依赖结构</td>
              </tr>
              <tr>
                <td><img src="${process.env.DIAGRAM_BASE}/callgraph.png?ts=${timestamp}" width="400"></td>
                <td><img src="${process.env.DIAGRAM_BASE}/hotspots.png?ts=${timestamp}" width="400"></td>
              </tr>
              <tr>
                <td>方法调用关系</td>
                <td>代码热点分布</td>
              </tr>
            </table>

            ${newModules.length > 0 ? `
            ### 🆕 新增模块
            ${newModules.map(m => `- \`${m}\``).join('\n')}
            ` : ''}

            ### 变更影响分析
            **涉及文件**：
            ${files.filter(f => f.filename.startsWith('MZAPI/MB/')).map(f => `
            - \`${f.filename}\`  
              ▸ 状态: ${f.status} | 新增行: +${f.additions} | 删除行: -${f.deletions}`).join('\n')}

            <details>
            <summary>📌 版本指纹信息</summary>

            | 项目 | 值 |
            |---|---|
            | PR编号 | #${context.issue.number} |
            | 提交哈希 | \`${process.env.GITHUB_SHA}\` |
            | 生成时间 | ${new Date().toISOString()} |
            | 存储路径 | [COS浏览器](${process.env.DIAGRAM_BASE}) |
            </details>
            `;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });

      - name: 🧹 清理临时文件
        if: always()
        run: |
          rm -rf arch_assets/
          find . -name '*.puml' -delete
          find . -name '*.dot' -delete